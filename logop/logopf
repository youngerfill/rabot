#!/bin/bash

. rabot-common
if [ "$?" -ne "0" ]; then
  echo "$0: Error while sourcing rabot-common" >&2
  exit 1
fi

if [ "$#" -lt 1 ]; then
  showHelp
fi

checkForHelp $1

: << DOCSTRING
Usage:
    first form:
        $(basename "$0") FILE COMMAND [ARG1]...

    second form:
        COMMAND [ARG1]... | $(basename "$0") FILE

The behavior of '$(basename "$0")' is similar to 'logop', with the
following differences:

- An extra 'FILE' argument specifies the logfile. '$(basename "$0")'
  never deletes the contents of this file but only appends to it.

- No symlink 'latest.txt' is created or updated.

For more info, see: 'logop --help'

A minimal sample of the first form:

    user@host ~ $ logopf mylogfile.txt echo Hello
    ==== Start log: 2014-05-23 22:43:03
    ==== Logscript: /home/user/tools/rabot/logop/logopf
    ==== Command: echo Hello
    ==== Working directory: /home/user
    ==== Logfile: /home/user/mylogfile.txt

    Hello

    ==== Exit status: 0
    ==== Elapsed: 0.00 seconds
    ==== End log: 2014-05-23 22:43:03

A minimal sample of the second form:

    user@host ~ $ echo Hello | logopf mylogfile.txt
    ==== Start log: 2014-05-23 22:43:18
    ==== Logscript: /home/user/tools/rabot/logop/logopf
    ==== Working directory: /home/user
    ==== Logfile: /home/user/mylogfile.txt

    Hello

    ==== Elapsed: 0.00 seconds
    ==== End log: 2014-05-23 22:43:18

See also: 'logop', 'logopd'
DOCSTRING

logFile="$1"
shift

. logop-core $*
